[
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			},
			{
				"internalType": "bytes",
				"name": "data",
				"type": "bytes"
			}
		],
		"name": "callExtension",
		"outputs": [
			{
				"internalType": "bool",
				"name": "mint",
				"type": "bool"
			},
			{
				"internalType": "uint256",
				"name": "amountOut",
				"type": "uint256"
			}
		],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "contract IKaliWhitelistManager",
				"name": "whitelistManager_",
				"type": "address"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"inputs": [],
		"name": "ETHtransferFailed",
		"type": "error"
	},
	{
		"inputs": [],
		"name": "NotDAO",
		"type": "error"
	},
	{
		"inputs": [],
		"name": "NotWhitelisted",
		"type": "error"
	},
	{
		"inputs": [],
		"name": "NullMultiplier",
		"type": "error"
	},
	{
		"inputs": [],
		"name": "PurchaseLimit",
		"type": "error"
	},
	{
		"inputs": [],
		"name": "Reentrancy",
		"type": "error"
	},
	{
		"inputs": [],
		"name": "SaleEnded",
		"type": "error"
	},
	{
		"inputs": [],
		"name": "TransferFromFailed",
		"type": "error"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "crowdsaleId",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "address",
				"name": "member",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "dao",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "amountOut",
				"type": "uint256"
			}
		],
		"name": "ExtensionCalled",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "crowdsaleId",
				"type": "uint256"
			},
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "listId",
				"type": "uint256"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "dao",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "address",
				"name": "purchaseToken",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint8",
				"name": "purchaseMultiplier",
				"type": "uint8"
			},
			{
				"indexed": false,
				"internalType": "uint96",
				"name": "purchaseLimit",
				"type": "uint96"
			},
			{
				"indexed": false,
				"internalType": "uint32",
				"name": "saleEnds",
				"type": "uint32"
			}
		],
		"name": "ExtensionSet",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "bytes",
				"name": "extensionData",
				"type": "bytes"
			}
		],
		"name": "setExtension",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "crowdsaleCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "crowdsales",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "listId",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "dao",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "purchaseToken",
				"type": "address"
			},
			{
				"internalType": "uint8",
				"name": "purchaseMultiplier",
				"type": "uint8"
			},
			{
				"internalType": "uint96",
				"name": "purchaseLimit",
				"type": "uint96"
			},
			{
				"internalType": "uint96",
				"name": "amountPurchased",
				"type": "uint96"
			},
			{
				"internalType": "uint32",
				"name": "saleEnds",
				"type": "uint32"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "whitelistManager",
		"outputs": [
			{
				"internalType": "contract IKaliWhitelistManager",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
]
